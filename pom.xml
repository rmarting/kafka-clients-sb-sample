<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.rmarting.kafka</groupId>
	<artifactId>kafka-clients-sb-sample</artifactId>
	<version>2.5.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>8</java.version>
		<!-- Kafka Clients -->
		<kafka-clients.version>2.5.0</kafka-clients.version>
		<!-- Swagger -->
		<springdoc-openapi-ui.version>1.4.3</springdoc-openapi-ui.version>
		<!-- Avro -->
		<avro.version>1.10.0</avro.version>
		<!-- Apicurio Registry -->
		<apicurio.version>1.3.2.Final</apicurio.version>
		<!--<apicurio.registry.url>http://localhost:8080/api</apicurio.registry.url>-->
		<apicurio.registry.url>http://service-registry.amq-streams-demo.apps.selae.sandbox847.opentlc.com/api</apicurio.registry.url>
		<!-- JKube -->
		<jkube.enricher.jkube-service.type>NodePort</jkube.enricher.jkube-service.type>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Open API -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc-openapi-ui.version}</version>
		</dependency>

		<!-- Spring Kafka -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<!-- Kafka Clients -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka-clients.version}</version>
		</dependency>

		<!-- Avro Schemas Dependency -->
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>

		<!-- Apicurio Serializers/Deserializers -->
		<dependency>
			<groupId>io.apicurio</groupId>
			<artifactId>apicurio-registry-utils-serde</artifactId>
			<version>${apicurio.version}</version>
		</dependency>
		<!-- https://github.com/Apicurio/apicurio-registry/issues/702 -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<version>4.5.7.Final</version>
		</dependency>

		<!-- Spring Cloud Kubernetes Config -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes-config</artifactId>
			<version>1.1.7.RELEASE</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>kafka-clients-sb-sample</finalName>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Avro Maven Plug-In to generate classes from schemas (files *.avsc) -->
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>${avro.version}</version>
				<executions>
					<execution>
						<!-- Generate Java Classes in generate-sources maven phase -->
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<!-- Source Folder with Avro Schemas -->
							<sourceDirectory>${project.basedir}/src/main/resources/schemas</sourceDirectory>
							<includes>
								<!-- Avro Schemas extension file pattern -->
								<include>**/*.avsc</include>
							</includes>
							<outputDirectory>${project.build.directory}/generated-sources/schemas</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Extending source resources to add generated classes by Avro -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<!-- Added the generated source folder as source path to compile classes -->
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<!-- Output folder defined in generate phase -->
								<source>${project.build.directory}/generated-sources/schemas</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>apicurio</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.apicurio</groupId>
						<artifactId>apicurio-registry-maven-plugin</artifactId>
						<version>${apicurio.version}</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>register</goal>
								</goals>
								<configuration>
									<registryUrl>${apicurio.registry.url}</registryUrl>
									<artifactType>AVRO</artifactType>
									<artifacts>
										<!-- Schema definition for SimpleTopicIdStrategy strategy -->
										<messages>${project.basedir}/src/main/resources/schemas/message.avsc</messages>
										<!-- Schema definition for TopicIdStrategy strategy -->
										<messages-value>${project.basedir}/src/main/resources/schemas/message.avsc</messages-value>
										<!-- Schema definition for RecordIdStrategy strategy -->
										<com.rmarting.kafka.schema.avro.Message>${project.basedir}/src/main/resources/schemas/message.avsc</com.rmarting.kafka.schema.avro.Message>
										<!-- Schema definition for TopicRecordIdStrategystrategy -->
										<messages-com.rmarting.kafka.schema.avro.Message>${project.basedir}/src/main/resources/schemas/message.avsc</messages-com.rmarting.kafka.schema.avro.Message>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>openshift</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.jkube</groupId>
						<artifactId>openshift-maven-plugin</artifactId>
						<version>1.0.0</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>kubernetes</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.jkube</groupId>
						<artifactId>kubernetes-maven-plugin</artifactId>
						<version>1.0.0</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
